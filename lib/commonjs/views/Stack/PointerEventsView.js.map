{"version":3,"sources":["PointerEventsView.tsx"],"names":["MIN_PROGRESS","TRUE","FALSE","NOOP","block","greaterThan","cond","set","call","onChange","Animated","PointerEventsView","React","Component","Value","props","active","progress","pointerEventsEnabled","value","setPointerEventsEnabled","Boolean","enabled","pointerEvents","root","setNativeProps","componentDidUpdate","prevProps","setValue","render","rest","exec","c"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAUA,MAAMA,YAAY,GAAG,IAArB;AAEA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,KAAK,GAAG,CAAd;AACA,MAAMC,IAAI,GAAG,CAAb;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA,GAA5B;AAAiCC,EAAAA,IAAjC;AAAuCC,EAAAA;AAAvC,IAAoDC,8BAA1D;AAEA;;;;;AAIe,MAAMC,iBAAN,SAAgCC,KAAK,CAACC,SAAtC,CAAuD;AAAA;AAAA;;AAAA,kDACrC,IAAIH,+BAASI,KAAb,CAC7B,KAAKC,KAAL,CAAWC,MAAX,GAAoBf,IAApB,GAA2BC,KADE,CADqC;;AAAA,kCAYrDE,KAAK,CAAC,CACnBE,IAAI,CACFD,WAAW,CAAC,KAAKU,KAAL,CAAWE,QAAZ,EAAsBjB,YAAtB,CADT,EAEFM,IAAI,CACF,KAAKY,oBADH,EAEFf,IAFE,EAGFI,GAAG,CAAC,KAAKW,oBAAN,EAA4BjB,IAA5B,CAHD,CAFF,EAOFK,IAAI,CAAC,KAAKY,oBAAN,EAA4BX,GAAG,CAAC,KAAKW,oBAAN,EAA4BhB,KAA5B,CAA/B,CAPF,CADe,EAUnBO,QAAQ,CACN,KAAKS,oBADC,EAENV,IAAI,CAAC,CAAC,KAAKU,oBAAN,CAAD,EAA8B,CAAC,CAACC,KAAD,CAAD,KAAa;AAC7C,WAAKC,uBAAL,CAA6BC,OAAO,CAAC,KAAKN,KAAL,CAAWC,MAAX,IAAqBG,KAAtB,CAApC;AACD,KAFG,CAFE,CAVW,CAAD,CAZgD;;AAAA,qDA8BjCG,OAAD,IAAsB;AACtD,YAAMC,aAAa,GAAGD,OAAO,GAAG,UAAH,GAAgB,MAA7C;AAEA,WAAKE,IAAL,IAAa,KAAKA,IAAL,CAAUC,cAAV,CAAyB;AAAEF,QAAAA;AAAF,OAAzB,CAAb;AACD,KAlCmE;;AAAA,kCAoCxC,IApCwC;AAAA;;AAKpEG,EAAAA,kBAAkB,CAACC,SAAD,EAAmB;AACnC,QAAI,KAAKZ,KAAL,CAAWC,MAAX,KAAsBW,SAAS,CAACX,MAApC,EAA4C;AAC1C,WAAKE,oBAAL,CAA0BU,QAA1B,CAAmC,KAAKb,KAAL,CAAWC,MAAX,GAAoBf,IAApB,GAA2BC,KAA9D;AACA,WAAKkB,uBAAL,CAA6B,KAAKL,KAAL,CAAWC,MAAxC;AACD;AACF;;AA4BDa,EAAAA,MAAM,GAAG;AACP;AACA,wBAAsC,KAAKd,KAA3C;AAAA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAN;AAAA,UAA6Ba,IAA7B;;AAEA,wBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,8BAAD,CAAU,IAAV;AAAe,MAAA,IAAI,EAAE,KAAKC;AAA1B,MADF,eAEE,oBAAC,iBAAD;AAAM,MAAA,GAAG,EAAEC,CAAC,IAAK,KAAKR,IAAL,GAAYQ;AAA7B,OAAqCF,IAArC,EAFF,CADF;AAMD;;AAhDmE","sourcesContent":["import * as React from 'react';\nimport { View, ViewProps } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\ntype Binary = 0 | 1;\n\ntype Props = ViewProps & {\n  active: boolean;\n  progress: Animated.Node<number>;\n  children: React.ReactNode;\n};\n\nconst MIN_PROGRESS = 0.99;\n\nconst TRUE = 1;\nconst FALSE = 0;\nconst NOOP = 0;\n\nconst { block, greaterThan, cond, set, call, onChange } = Animated;\n\n/**\n * Component that automatically computes the `pointerEvents` property\n * whenever position changes.\n */\nexport default class PointerEventsView extends React.Component<Props> {\n  private pointerEventsEnabled = new Animated.Value<Binary>(\n    this.props.active ? TRUE : FALSE\n  );\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.active !== prevProps.active) {\n      this.pointerEventsEnabled.setValue(this.props.active ? TRUE : FALSE);\n      this.setPointerEventsEnabled(this.props.active);\n    }\n  }\n\n  private exec = block([\n    cond(\n      greaterThan(this.props.progress, MIN_PROGRESS),\n      cond(\n        this.pointerEventsEnabled,\n        NOOP,\n        set(this.pointerEventsEnabled, TRUE)\n      ),\n      cond(this.pointerEventsEnabled, set(this.pointerEventsEnabled, FALSE))\n    ),\n    onChange(\n      this.pointerEventsEnabled,\n      call([this.pointerEventsEnabled], ([value]) => {\n        this.setPointerEventsEnabled(Boolean(this.props.active && value));\n      })\n    ),\n  ]);\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.root && this.root.setNativeProps({ pointerEvents });\n  };\n\n  private root: View | null = null;\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { active, progress, ...rest } = this.props;\n\n    return (\n      <React.Fragment>\n        <Animated.Code exec={this.exec} />\n        <View ref={c => (this.root = c)} {...rest} />\n      </React.Fragment>\n    );\n  }\n}\n"]}