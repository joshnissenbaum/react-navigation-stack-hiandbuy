{"version":3,"sources":["HeaderStyleInterpolators.tsx"],"names":["interpolate","add","Animated","forUIKit","current","next","layouts","defaultOffset","leftSpacing","leftLabelOffset","leftLabel","screen","width","titleLeftOffset","title","rightOffset","progress","leftButtonStyle","opacity","inputRange","outputRange","leftLabelStyle","transform","translateX","I18nManager","isRTL","rightButtonStyle","titleStyle","backgroundStyle","forFade","forStatic","forNoAnimation"],"mappings":"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","sourcesContent":["import { I18nManager } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { HeaderInterpolationProps, HeaderInterpolatedStyle } from '../types';\n\nconst { interpolate, add } = Animated;\n\n/**\n * Standard UIKit style animation for the header where the title fades into the back button label.\n */\nexport function forUIKit({\n  current,\n  next,\n  layouts,\n}: HeaderInterpolationProps): HeaderInterpolatedStyle {\n  const defaultOffset = 100;\n  const leftSpacing = 27;\n\n  // The title and back button title should cross-fade to each other\n  // When screen is fully open, the title should be in center, and back title should be on left\n  // When screen is closing, the previous title will animate to back title's position\n  // And back title will animate to title's position\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\n  const leftLabelOffset = layouts.leftLabel\n    ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing\n    : defaultOffset;\n  const titleLeftOffset = layouts.title\n    ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing\n    : defaultOffset;\n\n  // When the current title is animating to right, it is centered in the right half of screen in middle of transition\n  // The back title also animates in from this position\n  const rightOffset = layouts.screen.width / 4;\n\n  const progress = add(current.progress, next ? next.progress : 0);\n\n  return {\n    leftButtonStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    leftLabelStyle: {\n      transform: [\n        {\n          translateX: interpolate(progress, {\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-rightOffset, 0, leftLabelOffset]\n              : [leftLabelOffset, 0, -rightOffset],\n          }),\n        },\n      ],\n    },\n    rightButtonStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    titleStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0],\n      }),\n      transform: [\n        {\n          translateX: interpolate(progress, {\n            inputRange: [0.5, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-titleLeftOffset, 0, rightOffset]\n              : [rightOffset, 0, -titleLeftOffset],\n          }),\n        },\n      ],\n    },\n    backgroundStyle: {\n      transform: [\n        {\n          translateX: interpolate(progress, {\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-layouts.screen.width, 0, layouts.screen.width]\n              : [layouts.screen.width, 0, -layouts.screen.width],\n          }),\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Simple fade animation for the header elements.\n */\nexport function forFade({\n  current,\n  next,\n}: HeaderInterpolationProps): HeaderInterpolatedStyle {\n  const progress = add(current.progress, next ? next.progress : 0);\n  const opacity = interpolate(progress, {\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0],\n  });\n\n  return {\n    leftButtonStyle: { opacity },\n    rightButtonStyle: { opacity },\n    titleStyle: { opacity },\n    backgroundStyle: {\n      opacity: interpolate(progress, {\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0],\n      }),\n    },\n  };\n}\n\n/**\n * Simple translate animation to translate the header along with the sliding screen.\n */\nexport function forStatic({\n  current,\n  next,\n  layouts: { screen },\n}: HeaderInterpolationProps): HeaderInterpolatedStyle {\n  const progress = add(current.progress, next ? next.progress : 0);\n  const translateX = interpolate(progress, {\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL\n      ? [-screen.width, 0, screen.width]\n      : [screen.width, 0, -screen.width],\n  });\n\n  const transform = [{ translateX }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\nexport function forNoAnimation(): HeaderInterpolatedStyle {\n  return {};\n}\n"]}