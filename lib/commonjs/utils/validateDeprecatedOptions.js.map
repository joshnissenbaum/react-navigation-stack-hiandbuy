{"version":3,"sources":["validateDeprecatedOptions.tsx"],"names":["shownWarnings","validations","check","o","header","deprecated","updated","headerTitle","undefined","map","p","validateDeprecatedOptions","options","warnings","forEach","v","includes","push","length","console","warn","join"],"mappings":";;;;;;AAQA,IAAIA,aAAuB,GAAG,EAA9B;AAEA,MAAMC,WAAyB,GAAG,CAChC;AACEC,EAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAa,IAD3B;AAEEC,EAAAA,UAAU,EAAE,cAFd;AAGEC,EAAAA,OAAO,EAAE;AAHX,CADgC,EAMhC;AACEJ,EAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC,MAAF,IAAY,IAAZ,IAAoB,OAAOD,CAAC,CAACC,MAAT,KAAoB,UADtD;AAEEC,EAAAA,UAAU,EAAE,yBAFd;AAGEC,EAAAA,OAAO,EAAE;AAHX,CANgC,EAWhC;AACEJ,EAAAA,KAAK,EAAEC,CAAC,IACNA,CAAC,CAACI,WAAF,KAAkBC,SAAlB,IACA,OAAOL,CAAC,CAACI,WAAT,KAAyB,QADzB,IAEA,OAAOJ,CAAC,CAACI,WAAT,KAAyB,UAJ7B;AAKEF,EAAAA,UAAU,EAAE,8BALd;AAMEC,EAAAA,OAAO,EAAE;AANX,CAXgC,EAmBhC,GAAG,CAAC,YAAD,EAAe,aAAf,EAA8B,kBAA9B,EAAkD,WAAlD,EAA+DG,GAA/D,CAAmEC,CAAC,KAAK;AAC1ER,EAAAA,KAAK,EAAGC,CAAD,IAAYA,CAAC,CAACO,CAAD,CAAD,KAASF,SAAT,IAAsB,OAAOL,CAAC,CAACO,CAAD,CAAR,KAAgB,UADiB;AAE1EL,EAAAA,UAAU,YAAKK,CAAL,sBAFgE;AAG1EJ,EAAAA,OAAO,YAAKI,CAAL;AAHmE,CAAL,CAApE,CAnB6B,CAAlC;;AA0Be,SAASC,yBAAT,CACbC,OADa,EAEb;AACA,QAAMC,QAAsB,GAAG,EAA/B,CADA,CAGA;;AACAZ,EAAAA,WAAW,CAACa,OAAZ,CAAoBC,CAAC,IAAI;AACvB,QAAIf,aAAa,CAACgB,QAAd,CAAuBD,CAAC,CAACV,UAAzB,CAAJ,EAA0C;AACxC;AACD;;AAED,QAAIU,CAAC,CAACb,KAAF,CAAQU,OAAR,CAAJ,EAAsB;AACpBC,MAAAA,QAAQ,CAACI,IAAT,CAAcF,CAAd;AACAf,MAAAA,aAAa,CAACiB,IAAd,CAAmBF,CAAC,CAACV,UAArB;AACD;AACF,GATD;;AAWA,MAAIQ,QAAQ,CAACK,MAAb,EAAqB;AACnBC,IAAAA,OAAO,CAACC,IAAR,gDAC0CP,QAAQ,CAC7CJ,GADqC,CAEpCM,CAAC,iBACOA,CAAC,CAACV,UADT,yDACkEU,CAAC,CAACT,OADpE,cAFmC,EAKrCe,IALqC,CAKhC,IALgC,CAD1C;AAQD;AACF","sourcesContent":["import { NavigationStackOptions } from '../types';\n\ntype Validation = {\n  check: (o: NavigationStackOptions) => boolean;\n  deprecated: string;\n  updated: string;\n};\n\nlet shownWarnings: string[] = [];\n\nconst validations: Validation[] = [\n  {\n    check: o => o.header === null,\n    deprecated: 'header: null',\n    updated: 'headerShown: false',\n  },\n  {\n    check: o => o.header != null && typeof o.header !== 'function',\n    deprecated: 'header: <SomeElement />',\n    updated: 'header: () => <SomeElement />',\n  },\n  {\n    check: o =>\n      o.headerTitle !== undefined &&\n      typeof o.headerTitle !== 'string' &&\n      typeof o.headerTitle !== 'function',\n    deprecated: 'headerTitle: <SomeElement />',\n    updated: 'headerTitle: () => <SomeElement />',\n  },\n  ...['headerLeft', 'headerRight', 'headerBackground', 'backImage'].map(p => ({\n    check: (o: any) => o[p] !== undefined && typeof o[p] !== 'function',\n    deprecated: `${p}: <SomeElement />`,\n    updated: `${p}: () => <SomeElement />`,\n  })),\n];\n\nexport default function validateDeprecatedOptions(\n  options: NavigationStackOptions\n) {\n  const warnings: Validation[] = [];\n\n  // Validate options to show warnings for deprecations\n  validations.forEach(v => {\n    if (shownWarnings.includes(v.deprecated)) {\n      return;\n    }\n\n    if (v.check(options)) {\n      warnings.push(v);\n      shownWarnings.push(v.deprecated);\n    }\n  });\n\n  if (warnings.length) {\n    console.warn(\n      `Deprecation in 'navigationOptions':\\n${warnings\n        .map(\n          v =>\n            `- '${v.deprecated}' will be removed in a future version. Use '${v.updated}' instead`\n        )\n        .join('\\n')}`\n    );\n  }\n}\n"]}