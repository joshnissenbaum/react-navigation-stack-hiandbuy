{"version":3,"sources":["Stack.tsx"],"names":["dimensions","Dimensions","get","layout","width","height","AnimatedScreen","MaybeScreenContainer","enabled","rest","Platform","OS","Screens","screensEnabled","MaybeScreen","active","Animated","createAnimatedComponent","NativeScreen","FALLBACK_DESCRIPTOR","Object","freeze","options","cond","eq","ANIMATED_ONE","Value","getFloatingHeaderHeights","routes","insets","descriptors","previous","defaultHeaderHeight","reduce","acc","curr","key","StyleSheet","flatten","headerStyle","Stack","React","Component","scenes","progress","props","floatingHeaderHeights","e","nativeEvent","state","setState","route","previousHeight","closing","descriptor","onTransitionStart","onTransitionEnd","getDerivedStateFromProps","openingRoutesKeys","includes","animationEnabled","map","index","self","previousRoute","nextRoute","current","undefined","next","oldScene","scene","render","mode","navigation","closingRoutesKeys","onOpenRoute","onCloseRoute","onGoBack","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","ModalTransition","DefaultTransition","headerStyleInterpolator","forNoAnimation","top","right","bottom","left","safeAreaInsets","styles","container","handleLayout","focused","isScreenActive","length","process","env","NODE_ENV","header","headerShown","headerTransparent","cardTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","gestureResponseDistance","gestureDirection","transitionSpec","cardStyleInterpolator","gestureVelocityImpact","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","absoluteFill","handleTransitionStart","handleTransitionEnd","onContentHeightChange","handleFloatingHeaderLayout","styleInterpolator","style","floating","create","flex","overflow","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { NavigationRoute } from 'react-navigation';\nimport { EdgeInsets } from 'react-native-safe-area-context';\nimport Animated from 'react-native-reanimated';\nimport * as Screens from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport StackItem from './StackItem';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport validateDeprecatedOptions from '../../utils/validateDeprecatedOptions';\nimport {\n  Layout,\n  HeaderMode,\n  NavigationStackProp,\n  HeaderScene,\n  SceneDescriptorMap,\n  NavigationStackOptions,\n} from '../../types';\n\ntype ProgressValues = {\n  [key: string]: Animated.Value<number>;\n};\n\ntype Props = {\n  mode: 'card' | 'modal';\n  insets: EdgeInsets;\n  navigation: NavigationStackProp;\n  descriptors: SceneDescriptorMap;\n  routes: NavigationRoute[];\n  openingRoutesKeys: string[];\n  closingRoutesKeys: string[];\n  onGoBack: (props: { route: NavigationRoute }) => void;\n  onOpenRoute: (props: { route: NavigationRoute }) => void;\n  onCloseRoute: (props: { route: NavigationRoute }) => void;\n  getPreviousRoute: (props: {\n    route: NavigationRoute;\n  }) => NavigationRoute | undefined;\n  getGesturesEnabled: (props: { route: NavigationRoute }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: NavigationRoute }) => React.ReactNode;\n  headerMode: HeaderMode;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: NavigationRoute[];\n  descriptors: SceneDescriptorMap;\n  scenes: HeaderScene<NavigationRoute>[];\n  progress: ProgressValues;\n  layout: Layout;\n  floatingHeaderHeights: { [key: string]: number };\n};\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nlet AnimatedScreen: React.ComponentType<\n  ViewProps & { active: number | Animated.Node<number> }\n>;\n\nconst MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && Screens.screensEnabled()) {\n    return <Screens.ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.Node<number>;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && Screens.screensEnabled()) {\n    AnimatedScreen =\n      AnimatedScreen || Animated.createAnimatedComponent(Screens.NativeScreen);\n\n    return <AnimatedScreen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst { cond, eq } = Animated;\n\nconst ANIMATED_ONE = new Animated.Value(1);\n\nconst getFloatingHeaderHeights = (\n  routes: NavigationRoute[],\n  insets: EdgeInsets | null,\n  descriptors: SceneDescriptorMap,\n  layout: Layout,\n  previous: { [key: string]: number }\n) => {\n  const defaultHeaderHeight = getDefaultHeaderHeight(layout, insets);\n\n  return routes.reduce(\n    (acc, curr) => {\n      const { options = {} } = descriptors[curr.key] || {};\n      const { height = previous[curr.key] } = StyleSheet.flatten(\n        options.headerStyle || {}\n      );\n\n      acc[curr.key] = typeof height === 'number' ? height : defaultHeaderHeight;\n\n      return acc;\n    },\n    {} as { [key: string]: number }\n  );\n};\n\nexport default class Stack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const progress = props.routes.reduce(\n      (acc, curr) => {\n        const descriptor = props.descriptors[curr.key];\n\n        acc[curr.key] =\n          state.progress[curr.key] ||\n          new Animated.Value(\n            props.openingRoutesKeys.includes(curr.key) &&\n            descriptor &&\n            descriptor.options.animationEnabled !== false\n              ? 0\n              : 1\n          );\n\n        return acc;\n      },\n      {} as ProgressValues\n    );\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const current = progress[route.key];\n        const previous = previousRoute\n          ? progress[previousRoute.key]\n          : undefined;\n        const next = nextRoute ? progress[nextRoute.key] : undefined;\n\n        const oldScene = state.scenes[index];\n        const scene = {\n          route,\n          previous: previousRoute,\n          descriptor:\n            props.descriptors[route.key] ||\n            state.descriptors[route.key] ||\n            (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR),\n          progress: {\n            current,\n            next,\n            previous,\n          },\n        };\n\n        if (\n          oldScene &&\n          scene.route === oldScene.route &&\n          scene.progress.current === oldScene.progress.current &&\n          scene.progress.next === oldScene.progress.next &&\n          scene.progress.previous === oldScene.progress.previous &&\n          scene.descriptor === oldScene.descriptor\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      progress,\n      descriptors: props.descriptors,\n      floatingHeaderHeights: getFloatingHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.floatingHeaderHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    progress: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    floatingHeaderHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      height === this.state.layout.height &&\n      width === this.state.layout.width\n    ) {\n      return;\n    }\n\n    const layout = { width, height };\n\n    this.setState(state => ({\n      layout,\n      floatingHeaderHeights: getFloatingHeaderHeights(\n        this.props.routes,\n        this.props.insets,\n        state.descriptors,\n        layout,\n        {}\n      ),\n    }));\n  };\n\n  private handleFloatingHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: NavigationRoute;\n    height: number;\n  }) => {\n    const previousHeight = this.state.floatingHeaderHeights[route.key];\n\n    if (previousHeight && previousHeight === height) {\n      return;\n    }\n\n    this.setState(state => ({\n      floatingHeaderHeights: {\n        ...state.floatingHeaderHeights,\n        [route.key]: height,\n      },\n    }));\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: NavigationRoute },\n    closing: boolean\n  ) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n\n    descriptor &&\n      descriptor.options.onTransitionStart &&\n      descriptor.options.onTransitionStart({ closing });\n  };\n\n  private handleTransitionEnd = (\n    { route }: { route: NavigationRoute },\n    closing: boolean\n  ) => {\n    const descriptor = this.props.descriptors[route.key];\n\n    descriptor &&\n      descriptor.options.onTransitionEnd &&\n      descriptor.options.onTransitionEnd({ closing });\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      navigation,\n      routes,\n      closingRoutesKeys,\n      onOpenRoute,\n      onCloseRoute,\n      onGoBack,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, progress, floatingHeaderHeights } = this.state;\n\n    const focusedRoute = navigation.state.routes[navigation.state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimation,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={mode !== 'modal'}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const current = progress[route.key];\n            const scene = scenes[index];\n            const next = self[index + 1]\n              ? progress[self[index + 1].key]\n              : ANIMATED_ONE;\n\n            // Display current screen and a screen beneath. On Android screen beneath is hidden on animation finished bs of RNS's issue.\n            const isScreenActive =\n              index === self.length - 1\n                ? 1\n                : Platform.OS === 'android'\n                ? cond(eq(next, 1), 0, 1)\n                : index === self.length - 2\n                ? 1\n                : 0;\n\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              scene.descriptor &&\n              scene.descriptor.options\n            ) {\n              validateDeprecatedOptions(scene.descriptor.options);\n            }\n\n            const {\n              safeAreaInsets,\n              header,\n              headerShown,\n              headerTransparent,\n              cardTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              gestureResponseDistance,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n              gestureVelocityImpact,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as NavigationStackOptions);\n\n            let transitionConfig = {\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as NavigationStackOptions);\n\n                transitionConfig = {\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={mode !== 'modal'}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <StackItem\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRoutesKeys.includes(route.key)}\n                  layout={layout}\n                  current={current}\n                  scene={scene}\n                  previousScene={scenes[index - 1]}\n                  navigation={navigation}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardTransparent={cardTransparent}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  floatingHeaderHeight={floatingHeaderHeights[route.key]}\n                  headerShown={header !== null && headerShown !== false}\n                  getPreviousRoute={getPreviousRoute}\n                  headerMode={headerMode}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={this.handleTransitionStart}\n                  onTransitionEnd={this.handleTransitionEnd}\n                  onGoBack={onGoBack}\n                  gestureDirection={gestureDirection}\n                  transitionSpec={transitionSpec}\n                  cardStyleInterpolator={cardStyleInterpolator}\n                  headerStyleInterpolator={headerStyleInterpolator}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureResponseDistance={gestureResponseDistance}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              navigation,\n              getPreviousRoute,\n              onContentHeightChange: this.handleFloatingHeaderLayout,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}