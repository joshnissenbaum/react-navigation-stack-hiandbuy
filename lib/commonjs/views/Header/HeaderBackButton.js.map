{"version":3,"sources":["HeaderBackButton.tsx"],"names":["HeaderBackButton","React","Component","e","onLabelLayout","props","setState","fullLabelWidth","nativeEvent","layout","x","width","titleLayout","screenLayout","label","initialLabelWidth","state","backImage","labelVisible","tintColor","styles","icon","Boolean","iconWithLabel","require","onPress","requestAnimationFrame","renderLabel","truncatedLabel","allowFontScaling","labelStyle","leftLabelText","shouldTruncateLabel","undefined","labelElement","labelWrapper","minWidth","handleLabelLayout","color","Platform","OS","iconMaskContainer","iconMask","iconMaskFillerRect","render","pressColorAndroid","disabled","handlePress","container","select","ios","default","top","right","bottom","left","renderBackImage","web","StyleSheet","create","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport { HeaderBackButtonProps } from '../../types';\n\ntype Props = HeaderBackButtonProps & {\n  tintColor: string;\n};\n\ntype State = {\n  fullLabelWidth?: number;\n};\n\nclass HeaderBackButton extends React.Component<Props, State> {\n  static defaultProps = {\n    pressColorAndroid: 'rgba(0, 0, 0, .32)',\n    tintColor: Platform.select({\n      ios: '#037aff',\n      web: '#5f6368',\n    }),\n    labelVisible: Platform.OS === 'ios',\n    truncatedLabel: 'Back',\n  };\n\n  state: State = {};\n\n  private handleLabelLayout = (e: LayoutChangeEvent) => {\n    const { onLabelLayout } = this.props;\n\n    onLabelLayout && onLabelLayout(e);\n\n    this.setState({\n      fullLabelWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width,\n    });\n  };\n\n  private shouldTruncateLabel = () => {\n    const { titleLayout, screenLayout, label } = this.props;\n    const { fullLabelWidth: initialLabelWidth } = this.state;\n\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  private renderBackImage = () => {\n    const { backImage, labelVisible, tintColor } = this.props;\n\n    if (backImage) {\n      if (typeof backImage === 'function') {\n        return backImage({ tintColor });\n      }\n\n      return backImage;\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  private renderLabel() {\n    const {\n      label,\n      truncatedLabel,\n      allowFontScaling,\n      labelVisible,\n      backImage,\n      labelStyle,\n      tintColor,\n      screenLayout,\n    } = this.props;\n\n    const leftLabelText = this.shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? this.handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  }\n\n  private handlePress = () =>\n    this.props.onPress && requestAnimationFrame(this.props.onPress);\n\n  render() {\n    const { pressColorAndroid, label, disabled } = this.props;\n\n    return (\n      <TouchableItem\n        disabled={disabled}\n        accessible\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={\n          label && label !== 'Back' ? `${label}, back` : 'Go back'\n        }\n        accessibilityTraits=\"button\"\n        testID=\"header-back\"\n        delayPressIn={0}\n        onPress={disabled ? undefined : this.handlePress}\n        pressColor={pressColorAndroid}\n        style={[styles.container, disabled && styles.disabled]}\n        hitSlop={Platform.select({\n          ios: undefined,\n          default: { top: 16, right: 16, bottom: 16, left: 16 },\n        })}\n        borderless\n      >\n        <React.Fragment>\n          {this.renderBackImage()}\n          {this.renderLabel()}\n        </React.Fragment>\n      </TouchableItem>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n\nexport default HeaderBackButton;\n"]}